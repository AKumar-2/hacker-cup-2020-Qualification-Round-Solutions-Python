import numpy as np

z = int(input())
for i in range(1, z + 1):
    print(f"Case #{i}: ")
    # getting input
    m = int(input())
    incoming_flight = str(input())
    outgoing_flight = str(input())
    # function to check if travel is valid from i to j

    def check(a, b):
        if a == b:
            return "Y"
        if b > a:
            if outgoing_flight[a] == "N":
                return "N"
            elif incoming_flight[b] == "N":
                return "N"
            else:
                a += 1
                while a != b:
                    if incoming_flight[a] == "N" or outgoing_flight[a] == "N":
                        return "N"
                    a += 1
                return "Y"
        if a > b:
            if outgoing_flight[a] == "N":
                return "N"
            elif incoming_flight[b] == "N":
                return "N"
            else:
                a += -1
                while a != b:
                    if incoming_flight[a] == "N" or outgoing_flight[a] == "N":
                        return "N"
                    a += -1
                return "Y"


    # initialize matrix p
    p = np.empty(shape=(m, m), dtype=object)
    for i in range(0, m):
        for j in range(0, m):
            p[i][j] = check(i, j)
    for i in range(0, m):
        for j in range(0, m):
            print(f"{p[i][j]}", end='')
        print('')
